#include <stdio.h>
#include <stdlib.h>

6번 --------------------------------------------------
typedef struct {
	int price;
	char name[10];
} book;

void input_arr(book *p, int size) {
	for (int i = 0; i < size; i++) {
		printf("\n책 이름 입력 : ");
		gets(p->name);
		
		printf("책 가격 입력 : ");
		scanf_s("%d", &(p->price));
		getchar();
		p++;
	}
}

void print_datas(book *p, int size) {
	for (int i = 0; i < size; i++) {
		printf("\n책 이름 : %s", p->name);
		printf("\t책 가격 : %6d", p->price);
		p++;
	}
}

int total_amount(book *q, int size) {
	int i, sum = 0;

	for (i = 0; i < size; i++) {
		sum += q->price;
		q++;
	}
	return sum;
}

void ex_06() {
	/*
	6.
	①제목과 가격을 내용으로 하는 book 구조체 타입을 구성하고 3권의 책을 저장하는
	  book 구조체 변수 mybook 배열을 선언하시오.

	②input_arr() 함수를 호출하여 적당한 값을 입력 받아 구조체 배열에 저장하는 프로그램을 작성하시오.

	③구조체 배열에 저장된 내용을 print_datas() 함수를 호출하여 출력하시오. 

	④구조체 배열에 저장된 모든 책의 가격을 더한 값을 리턴하는 total_amount() 함수를
	  작성하여 수행하고 결과를 보이시오.
    */
	book mybook[3];
	int rst;

	input_arr(mybook, sizeof(mybook) / sizeof(mybook[0]));
	print_datas(mybook, sizeof(mybook) / sizeof(mybook[0]));
	rst = total_amount(mybook, sizeof(mybook) / sizeof(mybook[0]));
	printf("\n책의 총 합은 : %d", rst);
}

7번 --------------------------------------------------
typedef struct {
	char name[20];
	int age;
	char tel[20];
} person;

typedef struct {
	person personal;
	char city[20];
} student;

void print_std(student *s, int size) {
	for (int i = 0; i < size; i++) {
		printf("%-6s, %2d, %s, %-s\n", (s + i)->personal.name, (s + i)->personal.age, (s + i)->personal.tel, (s + i)->city);
	}
}

void find_std_city(student *s, int size, char *city) {
	char cnt[4], i, j = 0;

	for (i = 0; i < size; i++) {
		while (*(city + j)) {
			cnt[i] = 1;

			if ((s + i)->city[j] != *(city + j)) {
				cnt[i] = 0;
				j++;
				break;
			}
			else {
				j++;
				continue;
			}
			if (((s + i)->city[j]) != *(city + j)) {
				cnt[i] = 0;
			}
		}
	}

	for (i = 0; i < size; i++) {
		switch (cnt[i]) {
		case 1:
			printf("이름 : %-6s, 나이 : %2d, 전화번호 : %s, 지역 : %-s\n", (s + i)->personal.name, (s + i)->personal.age, (s + i)->personal.tel, (s + i)->city);
			break;
		default: break;
		}
	}
}

void ex_07() {
	/*
	A.	구조체 구조체 person을 정의하시오. (구성: 이름name, 나이 age, 전화번호 tel)
	B.	구조체 student를 정의하시오. (구성: 개인정보(위의 구조체 person 이용) personal, 도시 city)
	C.	다음의 내용을 구조체 배열 data에 초기화 하시오.
	이름   나이     전화번호        도시
	PARK    40     011-3333-2456    seoul
	LEE     50     016-3467-4389    chuncheon
	Shin    55     017-2222-2456    pusan
	Yang    55     017-2222-0000    suwon

	D.	print_std()함수를 호출하여 구조체 배열에 저장된 내용을 출력하시오.
	E.	사용자에게 도시의 종류를 입력 받아 find_std_city() 함수를 호출하여 그 도시에 해당하는 학생정보를 출력하시오.
	*/
	char in_city[20];
	student data[4] = {
		{{"PARK", 40, "011 - 3333 - 2456"}, "seoul"},
		{{"LEE", 50, "016 - 3467 - 4389"}, "chuncheon"},
		{{"Shin", 55, "017 - 2222 - 2456"}, "pusan"},
		{{"Yang", 55, "017 - 2222 - 0000"}, "suwon"}
	};

	print_std(data, sizeof(data) / sizeof(data[0]));
	printf("도시의 종류를 입력 : \n");
	gets(in_city);
	find_std_city(data, sizeof(data) / sizeof(data[0]), in_city);
}

8번 ----------------------------------------------
struct hexa2binary {
	char myhex;
	char mybin[5];
};
typedef struct hexa2binary hexa2binary;

char hexa2bin(hexa2binary *h, char ch, char *p, int size) {
	int cmp = 0, i = 0;

	if ('0' <= ch && ch <= '9') {
		cmp = ch - '0';

		for (i = 0; i < size - 1; i++) {
			*(p + i) = (h + cmp)->mybin[i];
		}
		*(p + i) = '\0';
	}
	else if ('a' <= ch && ch <= 'f') {
		cmp = ch - 'W';

		for (i = 0; i < size - 1; i++) {
			*(p + i) = (h + cmp)->mybin[i];
		}
		*(p + i) = '\0';
	}
	else {
		for(i = 0; i < size - 1; i++){
			*(p + i) = 'x';
		}
		*(p + i) = '\0';
		return '\0';
	}
}

void ex_08() {
	/*
	8.	구조체, 포인터, 함수를 이용하여 16진수를 2진수로 변환하는 프로그램을 포인터를 이용하여 완성하시오.

	16진수	2진수  16진수 2진수	16진수	2진수
	  0		0000	6	   0110	  c		1100
	  1		0001	7	   0111	  d		1101
	  2		0010	8	   1000	  e		1110
	  3		0011	9	   1001   f		1111
	  4		0100	a	   1010		
	  5		0101	b	   1011		
	*/
	hexa2binary h2b[16] = {
		{'0', "0000"}, {'1', "0001"}, {'2', "0010"}, {'3', "0011"},
		{'4', "0100"}, {'5', "0101"}, {'6', "0110"}, {'7', "0111"},
		{'8', "1000"}, {'9', "1001"}, {'a', "1010"}, {'b', "1011"},
		{'c', "1100"}, {'d', "1101"}, {'e', "1110"}, {'f', "1111"}
	};
	char ch = 'a', result[5] = { "0000" }, end_cmp;

	printf("16진수 => 2진수 변환\n");

	while (1) {
		printf("16진수 입력 : ");
		ch = getche();
		end_cmp = hexa2bin(h2b, ch, result, sizeof(result) / sizeof(char));
		if (end_cmp != '\0') {
			printf(" => %s \n", result);
		}
		else {
			printf(" => %s \n", result);
			printf("16진수가 아닙니다. 종료합니다.");
			break;
		}
	}
}

메인 함수 ----------------------------------------
void main(void) {
	ex_06();
	ex_07();
	ex_08();
	getchar();
}