다음 방법을 배우게됩니다.

저장소 생성 및 사용
새 분기 시작 및 관리
파일을 변경하고 GitHub에 커밋으로 푸시합니다.
끌어 오기 요청 열기 및 병합

GitHub이란 무엇입니까?
GitHub은 버전 제어 및 공동 작업을위한 코드 호스팅 플랫폼입니다. 그것은 당신과 다른 사람들이 어디에서나 프로젝트를 함께 할 수있게합니다.

이 튜토리얼에서는 저장소 , 분기 , 커밋 , 끌어 오기 요청 과 같은 GitHub 필수 기능에 대해 설명 합니다 . 나만의 Hello World 저장소를 만들고 코드 생성 및 검토를위한 대중적인 방법 인 GitHub의 Pull Request 워크 플로우에 대해 배우게됩니다.

코딩 필요 없음
이 자습서를 완료하려면 GitHub.com 계정 과 인터넷 액세스 가 필요합니다 . 코드 작성, 명령 행 사용 또는 Git (GitHub가 빌드 된 버전 제어 소프트웨어)을 설치하는 방법을 알 필요가 없습니다.

팁 : 별도의 브라우저 창 (또는 탭)에서이 가이드를 열면 튜토리얼의 단계를 완료하는 동안 볼 수 있습니다.


1 단계. 저장소 만들기
저장소는 일반적으로 하나의 프로젝트를 구성하는 데 사용됩니다. 리포지토리에는 프로젝트에 필요한 폴더 및 파일, 이미지, 비디오, 스프레드 시트 및 데이터 세트가 포함될 수 있습니다. README 나 프로젝트에 대한 정보 가 담긴 파일을 포함하는 것이 좋습니다 . GitHub을 사용하면 새 저장소를 만드는 동시에 쉽게 추가 할 수 있습니다. 또한 라이센스 파일과 같은 다른 공통 옵션을 제공합니다.

귀하 hello-world는 아이디어, 자원을 저장하거나 공유하고 다른 사람들과 일을 논의 곳 저장소는 장소가 될 수 있습니다.

새 저장소를 만들려면
오른쪽 상단의 아바타 또는 identicon 옆에있는을 클릭하십시오. 새 저장소 를 선택하십시오 .
저장소의 이름을 지정하십시오 hello-world.
짧은 설명을 작성하십시오.
README로이 저장소 초기화를 선택하십시오 .
새로운 repo-form

저장소 작성을 클릭 하십시오 .


2 단계. 지점 만들기
분기 는 한 번에 여러 버전의 저장소에서 작업하는 방법입니다.

기본적으로 저장소에는 master최종 분기로 간주되는 하나의 분기 가 있습니다. 우리는 브랜치를 사용하기 전에 브랜치를 사용해 실험하고 편집합니다 master.

브랜치에서 분기를 만들면 해당 시점 master의 복사본 또는 스냅 샷을 master만듭니다. master지점에서 일하는 동안 다른 사람이 지점을 변경 한 경우 해당 지점을 가져올 수 있습니다.

이 다이어그램은 다음을 보여줍니다.

master지점
새로운 브랜치 feature(이 브랜치에서 '기능 작업'을 수행하기 때문에)
feature병합되기까지 걸리는 여행master
지회

다른 버전의 파일을 저장 한 적이 있습니까? 같은 것 :

story.txt
story-joe-edit.txt
story-joe-edit-reviewed.txt
지점은 GitHub 저장소에서 비슷한 목표를 달성합니다.

여기 GitHub에서 개발자, 작가 및 디자이너는 버그 수정 및 기능 작업을 우리 master지점 과 분리하여 사용합니다 . 변경이 준비되면 분기를 병합합니다 master.

새 분기를 만들려면
새 저장소로 이동하십시오 hello-world.
branch : master 라는 파일 목록의 맨 위에있는 드롭 다운을 클릭하십시오 .
readme-edits새 분기 텍스트 상자에 분기 이름을 입력하십시오 .
파란색 분기 만들기 상자를 선택 하거나 키보드에서 "Enter"키를 누릅니다.
브랜치 gif

지금 당신은 두 가지를 가지고 master와 readme-edits. 그들은 똑같이 보이지만 길지 않다! 다음으로 변경 사항을 새 분기에 추가합니다.


3 단계. 변경 사항 만들기 및 커밋
브라보! 이제 readme-edits지점 의 코드보기 (코드보기) 가 나타납니다 master. 편집을 좀 해보 죠.

GitHub에서 저장된 변경 사항을 커밋 이라고 합니다. 각 커밋에는 관련 변경 메시지 가 있으며, 이는 특정 변경이 이루어진 이유를 설명하는 설명입니다. 커밋 메시지는 변경 기록을 캡처하므로 다른 작성자가 수행 한 작업과 그 이유를 이해할 수 있습니다.

변경하고 커밋하기
README.md파일을 클릭 하십시오.
클릭  편집 할 파일보기의 오른쪽 상단 구석에있는 연필 아이콘.
에디터에서 자신에 대해 조금 씁니다.
변경 사항을 설명하는 커밋 메시지를 작성하십시오.
커밋 변경 버튼을 클릭하십시오 .
범하다

이러한 변경 사항은 readme-edits지점 의 README 파일에만 적용 되므로 이제이 분기에는 다른 내용이 포함됩니다 master.


4 단계. 끌어 오기 요청 열기
좋은 편집! 이제 분기를 변경 했으므로 pull 요청을master 열 수 있습니다 .

풀 요청은 GitHub의 공동 작업의 핵심입니다. 끌어 오기 요청 을 열면 변경 내용을 제안하고 누군가가 귀하의 컨트 리뷰 션을 검토하고 끌어 와서 해당 지사에 병합하도록 요청합니다. 당기 요청을 보여 차이점 두 가지의 내용, 또는 차이를. 변경, 추가 및 뺄셈은 녹색과 빨간색으로 표시됩니다.

당신이 커밋을하자마자, 코드가 끝나기도 전에 풀 요청을 열고 토론을 시작할 수 있습니다.

당겨 받기 요청 메시지에 GitHub의 @mention 시스템 을 사용하여 특정 사람이나 팀이 홀이나 10 시간대에 있는지 여부에 관계없이 피드백을 요청할 수 있습니다.

자신의 저장소에서 끌어 오기 요청을 열고 직접 병합 할 수도 있습니다. 대규모 프로젝트를 수행하기 전에 GitHub 플로우를 익히는 훌륭한 방법입니다.

README에 대한 변경 사항에 대한 풀 요구 열기
더 큰 버전을 보려면 이미지를 클릭하십시오.

단계	스크린 샷
클릭  요청 요청 탭에서 끌어 오기 요청 페이지에서 녹색 새로 요청 요청 보내기 버튼을 클릭합니다.	홍보 탭
에서 예 비교의 상자, 당신이 만든 지점을 선택 readme-edits하여 비교, master(원래).	분기
비교 페이지에서 비교 항목의 변경 사항을 살펴보고 제출하려는 내용이 맞는지 확인하십시오.	diff
제출하려는 변경 사항이 만족 스럽다면 큰 녹색 초록 요청 만들기 버튼을 클릭하십시오.	생성 - 끌어 오기
당겨 받기 요청에 제목을 쓰고 변경 사항에 대한 간략한 설명을 작성하십시오.	pr- 양식
메시지를 모두 끝내면 끌어 오기 요청 만들기를 클릭 하십시오 !

팁 : 당신이 사용할 수있는 이모티콘 및 드래그 및 이미지 GIF를 드롭 의견에와 요청을 당깁니다.


5 단계. 끌어 오기 요청 병합
이 마지막 단계에서 변경 사항을 함께 가져와 readme-edits지점에 지점을 병합해야합니다 master.

녹색 병합 요청 요청 버튼을 클릭하여 변경 사항을 병합합니다 master.
병합 확인을 클릭하십시오 .
변경 사항이 통합 된 이후에 지점 을 삭제 하려면 보라색 상자의 분기 삭제 버튼을 클릭하십시오.
병합하다 지우다

세상에 알리다!
이 튜토리얼을 완료하면 프로젝트를 만들고 GitHub에서 풀 요청을하는 법을 배웠습니다!

이 자습서에서 수행 한 작업은 다음과 같습니다.

오픈 소스 저장소 생성
새 지점 시작 및 관리
파일을 변경하고 이러한 변경 사항을 GitHub에 위임했습니다.
풀 요청 열기 및 병합
GitHub 프로필을보고 새로운 기여 사각형을 볼 수 있습니다 !

당겨 받기 요청 기능에 대한 자세한 내용을 보려면 GitHub 플로우 가이드를 읽는 것이 좋습니다 . GitHub Explore를 방문 하여 오픈 소스 프로젝트에 참여할 수도 있습니다 .

팁 : GitHub을 시작하는 방법에 대한 자세한 내용은 다른 가이드 , YouTube 채널 및 On-Demand 교육 을 확인하십시오 .

최종 업데이트 : 2016 년 4 월 7 일