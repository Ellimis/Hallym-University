python 강의

객체지향프로그램 class 를 이용하는 언어

사용자는 갯수나 몇가지만 신경쓰고 나머지 작업은 class 를 선언해서 그 안에서 자동으로 할 수 있게 해주는 작업
작업량이 너무 많아지면 gpu에서조차 렉이 걸리므로 class 이용
---------------------------------------------------------------------

마우스에서 버튼을 누르면 그 신호를 운영체제(os)가 받는데 그 신호를 '이벤트' 라고 한다.
그리고 그 이벤트는 키보드로부터도 나온다.
운영체제(os)가 이벤트를 받아서 전달해주는 신호를 '메세지' 라고 한다.
즉 메세지가 들어왔을 때 해당하는 일을 함수로 전달

변수명.onkey(함수명, "메세지 할당 키")
//이벤트 함수를 묶어준 것일 뿐 실행은 하지 않음
실행 : 변수명.listen() #신호가 오길 기다리는 중
listen 이랑 같이 나오는 함수가 변수명.mainloop()
이 전체 프로그램을 관장하는 mainloop 가 있어야됨. 특히 모바일에서 할 때

frame(프레임) : 한장의 이미지. 변수명.clear()로 프레임을 관리
프레임은 CPU가 관리. 
cpu 가 이미지 상에서 점하나를 찍더라도 맨처음부터 확인하고 넘어가서
gpu 를 만듬.
스크린변수.update() : 프레임을 전환해달라는 의미, gpu에게 다시 그려달라는 이미
update() 없이 하면 cpu로 그린것.
스크린변수.tracer(0,0) : update랑 같이 다니는 게 tracer, 그림 그리는 것을 gpu에 맡긴다는 뜻

숫자를 이용해서 그림을 그리고 화면에 보이고 움직이는 것을 컴퓨터 그래픽스(computer grapics)라 한다

이미지를 가진 학문 분야는 세개
	1.사람이 보기좋게 원래의 이미지를 변화시키는 분야 : 영상처리
	2.이미지를 사람이 아닌 cctv나 기계가 01로써 판단할 수 있게 해주는 분야 : 컴퓨터 비전
	3.01의 숫자로 어떤 사진에서 새로운 아바타를 만들 수 있게 해주는 분야: 컴퓨터 그래픽스

------------  main.py

import turtle
from mysmile import * #case2
aaa = turtle.Turtle()
sss = turtle.Screen() ##### (1)
aaa.speed(0) 
 
xx = 0
yy = 0

def MoveRight():
  aaa.clear() #frame #(4)
  global xx #(6)
  xx = xx + 10
  MySmile(aaa,xx,yy,0.3)
  sss.update() #cpu + gpu (5)

def MoveLeft():
  aaa.clear()
  global xx
  xx = xx - 10
  MySmile(aaa,xx,yy,0.3)
  sss.update() 

MySmile(aaa,xx,yy,0.3) 

####
sss.onkey(MoveRight,"Right")
sss.onkey(MoveLeft,"Left")
sss.listen()
sss.mainloop()
sss.tracer(0,0)
####

-------------- mysmile.py

def MyGoto(aaa,x_xx,x_yy):
  aaa.penup()
  aaa.goto(x_xx,x_yy)
  aaa.pendown() 
 
def DrawCircle(aaa,x_xx, x_yy, x_radius, x_color):
  MyGoto(aaa,x_xx,x_yy) 
  aaa.color(x_color)
  aaa.fillcolor(x_color)
  aaa.begin_fill()
  aaa.circle(x_radius)
  aaa.end_fill() 
 
def MySmile(aaa,xx, yy, rw):
  DrawCircle(aaa,xx + 0*rw, yy -100*rw, 150*rw,'green')
  DrawCircle(aaa,xx -40*rw, yy +60*rw, 30*rw,'white')
  DrawCircle(aaa,xx -40*rw, yy +60*rw, 10*rw,'black')
  DrawCircle(aaa,xx +50*rw, yy +60*rw, 40*rw,'white')
  DrawCircle(aaa,xx +50*rw, yy +60*rw, 10*rw,'black')
  DrawCircle(aaa,xx +0*rw, yy + 20*rw, 10*rw,'black')
  DrawCircle(aaa,xx +0*rw, yy -80*rw, 40*rw,'brown')