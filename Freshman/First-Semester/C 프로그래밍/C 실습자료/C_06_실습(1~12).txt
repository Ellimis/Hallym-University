void ex_1() {
	//1.	문자 4개를 저장하는 배열을 선언하고 사용자로부터 문자를 입력 받아 저장하고 출력하시오.
	/*
	문자입력 : c
	문자입력 : g
	문자입력 : v
	문자입력 : s
	입력된 문자=cgvs
	*/

	char ch[4];

	for (int i = 0; i < sizeof(ch)/sizeof(char); i++) 
	{
		printf("\n문자 입력 : ");
		ch[i] = getche();
	}

	printf("\n입력된 문자 = ");

	for (int j = 0; j < sizeof(ch) / sizeof(char); j++) printf("%c", ch[j]);
}

void ex_2() {
	//2.문자열 1개를 저장하는 배열을 선언하고 사용자로부터 문자열를 입력 받아 저장하고 출력하시오.
	//문자열입력 : cgvs
	//입력된 문자열 = cgvs

	char ch[50];

	printf("\n문자열입력 : ");
	gets(ch);
	
	printf("입력된 문자열 = %s", ch);
}

void ex_3() {
	//3.	문자열 1개를 입력 받아 그 문자열의 길이를 출력하시오. (배열사용).
	//문자열입력: cgvs
	//입력된 문자열 길이 = 4
	char ch[50];
	int cnt = 0, i = 0;

	do {
		printf("\n문자열 입력 : ");
		gets(ch);

		if (!(ch[0])) break;
		while (ch[i]) {
			cnt++;
			i++;
		}
		printf("\n입력한 문자열 길이 = %d", cnt);
	} while (1);
}

void ex_4() {
	//4.	문자열을 입력 받아 그 문자열의 길이를 출력하는 작업을 반복하시오. 
	//단, <Enter키>만을 입력 받으면 반복을 종료하시오.
	/*
	문자열입력 : cgvs
	입력된 문자열 길이=4

	문자열입력 : cgv
	입력된 문자열 길이=3

	문자열입력 : cg
	입력된 문자열 길이=2

	문자열입력 : <Enter키>
	*/
	char ch[50];
	int i;

	do {
		i = 0;
		printf("\n문자열입력 : ");
		gets(ch);

		if (ch[0] == '\0') break;

		

		printf("\n입력된 문자열 길이 = %d", i);
	} while (1);
}

void ex_5() {
	//5.문자열과 문자를 입력 받아 문자열에서 문자가 몇 개 인지 출력하는 작업을 반복하시오.
	//단, <Enter키>만을 입력 받으면 반복을 종료하시오. 
	/*
	문자열입력 : apple
	문자입력 : p
	입력된 문자열 apple에서 p는 2개.

	문자열입력 : programming
	문자입력 : h
	입력된 문자열 programming에서 h는 0개.

	문자열입력 : <Enter키>
	*/
	char ch[50], c[1];
	int cnt, i;

	do {
		cnt = 0, i = 0;
		printf("\n문자열 입력 : ");
		gets(ch);

		if (ch[0] == '\0') break;

		printf("\n문자 입력 : ");
		c[0] = getche();

		while (ch[i]) {
			if (ch[i] == c[0]) cnt++;
			i++;
		}

		printf("\n입력된 문자열 %s에서 %c는 %d개.", ch, c[0], cnt);
	} while (1);
}

void ex_6() {
	//6.문자열을 입력 받아 거꾸로 저장하고 출력하는 작업을 반복하는 프로그램 작성하시오.
	//단, <Enter키>만을 입력 받으면 반복을 종료하시오.
	/*
	문자열입력 : apple
	역순=elppa

	문자열입력 : cat
	역순=tac

	문자열입력 : <Enter키>
	*/
	char ch[30];
	int i, cnt = 0;
	do {
		printf("\n문자열입력 : ");
		gets(ch);

		while (ch[cnt]) {
			cnt++;
		}

		if (ch[0] == '\0') break;

		printf("\n역순 = ");

		for (int i = cnt; i >= 0; i--)
		{
			printf("%c", ch[i]);
		}

	} while (1);
	getchar();
}

void ex_7() {
	/*7.	위 6번의 프로그램 수행을 계속하되 입력된 단어가 <Enter키> 또는 
	“quit”이면 프로그램을 종료하도록 수정하시오. 
	문자열입력 : apple
	역순=elppa

	문자열입력 : quit
	*/
	char ch[30], str[] = "quit";
	int i, cnt = 0;
	do {
		printf("\n문자열입력 : ");
		gets(ch);

		while (ch[cnt]) {
			cnt++;
		}

		if (ch[0] == 'q') {
			if (ch[1] == 'u') {
				if (ch[2] == 'i') {
					if (ch[3] == 't') {
						break;
					}
				}
			}
		}

		if (ch[0] == '\0') break;

		printf("\n역순 = ");

		for (int i = cnt; i >= 0; i--)
		{
			printf("%c", ch[i]);
		}

	} while (1);
	getchar();
}

void ex_8() {
	/*8.	문자열 2개를 입력 받아 같은지 다른지 비교하는 프로그램 작성하시오.
	문자열입력 : apple
	문자열입력 : apples
	apple, apples 다름.
	문자열입력 : apple
	문자열입력 : apple
	apple, apple 같음.
	문자열입력 : <Enter키>
	*/
	int i, flag = 1;
	char arr[2][50];

	while(1){
		
		printf("\n문자열입력 : ");
		gets(arr[0]);
		if (arr[0][0] == '\0') break; //if *((arr[0]+0) == '\0') break; // if *((arr[0]) == '\0') break;

		printf("\n문자열 입력 : ");
		gets(arr[1]);

		if(!(strcmp(arr[0], arr[1]))) printf("%s, %s 같음", arr[0], arr[1]);
		else printf("%s, %s 다름", arr[0], arr[1]);
		
	}
}

void ex_9() {
	/*9.정수를 입력 받아 2진수로 변환하는 프로그램을 작성하시오. 0을 입력하면 프로그램을 종료하시오.
	정수입력 : 8
	입력된 8의 이진수는 1000
	정수입력 : 9
	입력된 9의 이진수는 1001
	정수입력 : 0
	*/
	int num, i, cnt;
	
	while (1) {
		cnt = 0;
		i = 0;
		char bit[32] = { 0 };

		printf("\n정수 입력(0입력시 종료) : ");
		scanf_s("%d", &num);
		if (!(num)) break;
		
		printf("\n입력된 %d의", num);

		while (num > 0) {
			if (num & 1) bit[cnt] = '1'; //1010 & 0001 = 0 //101 & 001 = 1 //10 & 01 = 0 // 1 & 1 = 1
			else bit[cnt] = '0'; //0 1 0 1
			cnt++;
			num >>= 1;
		}

		bit[cnt] = '\0'; // 0 1 0 1 '\0'
		printf(" 이진수는 ");

		for (i = strlen(bit) - 1; i >= 0; i--) {
			printf("%c", bit[i]);
		}
	}
}

void ex_10() {
	/*10.정수 4개를 저장하는 from배열을 선언하고 사용자로부터 정수를 입력 받아
		다음과 같이 수행되는 프로그램을 작성하시오. (배열사용).
	정수입력 : 2
	정수입력 : 4
	정수입력 : 5
	정수입력 : 6

	합=17
	가장 큰 수= 6
	가장 작은 수=2
	*/
	int from[4], i, sum = 0, M = 0, m;

	for (i = 0; i < sizeof(from) / sizeof(int); i++) {
		printf("\n정수 입력 : ");
		scanf_s("%d", &from[i]);
		sum += from[i];
	}
	
	for (i = 0; i < sizeof(from) / sizeof(int); i++) {
		if (M < from[i]) M = from[i];
	}

	m = from[0];

	for (i = 0; i < sizeof(from) / sizeof(int); i++) {
		if (m > from[i]) m = from[i];
	}

	printf("\n합 = %d", sum);
	printf("\n가장 큰 수 = %d", M);
	printf("\n가장 작은 수 = %d", m);
	getchar();
}

void ex_11() {
	/*11.	위 1번의 일차원 배열 from을 to배열에 복사하고 두 배열의 내용을 출력하시오.
	정수입력 : 2
	정수입력 : 4
	정수입력 : 5
	정수입력 : 6

	from배열: 2, to배열:2
	from배열: 4, to배열:4
	from배열: 5, to배열:5
	from배열: 6, to배열:6
	*/
	int from[4], to[4] = {0}, i;

	for (i = 0; i < sizeof(from) / sizeof(int); i++) {
		printf("\n정수 입력 : ");
		scanf_s("%d", &from[i]);
	}

	for (i = 0; i < sizeof(from) / sizeof(int); i++) {
		to[i] += from[i];
		printf("\nfrom배열 : %d, to배열 : %d", from[i], to[i]);
	}
	getchar();
}

void ex_12() {
	int num, i, max, max_index; // num: 입력받을 변수, max: 가장 많은 숫자를 담는 변수
	int check[5] = { 0 }; // {0, 0, 0, 0, 0}
	printf("0에서 4까지의 정수를 열 개 입력하시오.\n");

	for (i = 0; i < 10; i++) {
		scanf_s("%d", &num);
		if (num > 4 || num < 0) {
			printf("다시입력<0 ~ 4> : ");
			i--;
		}
		else
			check[num]++; // num이 곧 index역할 가능 // 3 : {0, 0, 0, 1, 0} // 2 : {0, 0, 1, 1, 0} //3 : {0, 0, 1, 2, 0}
	}
	max_index = 0;
	max = check[0]; //max=0
	for (i = 1; i < sizeof(check) / sizeof(check[0]); i++) {
		if (max < check[i]) // 0<0 // 0<1 //2
			max_index = i; //
		max = check[i];
	}
	printf("0 ~ 4중 가장 많이 나온 수는 %d이고, %d번 나왔습니다.\n", max_index, check[max_index]);
	getchar();
}