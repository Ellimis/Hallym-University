#include <Windows.h>
#include <tchar.h> //멀티바이트와 유니코드 지원해주는 문자열 형식 함수
#include <time.h>
LRESULT CALLBACK WndProc(HWND hWnd, UINT iMsg, WPARAM wParam, LPARAM lParam);
VOID CALLBACK TimerProc(HWND hWnd, UINT uMsg, UINT idEvent, DWORD dwTime);

INT APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevinstance, LPTSTR pszLine, INT nShow) {
	HWND hWnd; //윈도우 핸들
	WNDCLASS wc; //윈도우 스타일이나 크기 등을 받기 위해 선언
	MSG msg;

	wc.style = CS_OWNDC | CS_DBLCLKS; //DBLCLKS 를 넣어야 마우스 더블 클릭할 수 있음
	wc.lpfnWndProc = WndProc; //메세지 처리 함수 지정, 메세지가 전부 이 함수에서 처리
	wc.cbClsExtra = 0;
	wc.cbWndExtra = 0;
	wc.hInstance = hInstance;
	wc.hIcon = LoadIcon(NULL, IDC_ICON);
	wc.hCursor = LoadCursor(NULL, IDC_ARROW);
	wc.hbrBackground = reinterpret_cast<HBRUSH>(GetStockObject(WHITE_BRUSH));
	wc.lpszMenuName = NULL;
	wc.lpszClassName = TEXT("MyApp");

	RegisterClass(&wc); //윈도우 틀 등록, 로그인 같은 형식

	hWnd = CreateWindow(TEXT("MyApp"), TEXT("Sample Application"),
		WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT,
		CW_USEDEFAULT, CW_USEDEFAULT, NULL, NULL, hInstance, NULL);

	ShowWindow(hWnd, SW_SHOW);

	while (GetMessage(&msg, NULL, NULL, NULL)) {
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}

	return msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT iMsg, WPARAM wParam, LPARAM lParam)
{
	HDC hDC;
	PAINTSTRUCT ps;

	switch (iMsg)
	{
	case WM_PAINT:
		hDC = BeginPaint(hWnd, &ps);

		Rectangle(hDC, 100, 100, 1100, 500);

		Rectangle(hDC, 150, 150, 300, 300);
		Rectangle(hDC, 400, 150, 550, 300);
		Rectangle(hDC, 650, 150, 800, 300);
		Rectangle(hDC, 900, 150, 1050, 300);

		Ellipse(hDC, 300, 400, 500, 600);
		Ellipse(hDC, 700, 400, 900, 600);

		MoveToEx(hDC, 250, 450, nullptr);
		LineTo(hDC, 300, 360);
		LineTo(hDC, 500, 360);
		LineTo(hDC, 550, 450);
		MoveToEx(hDC, 650, 450, nullptr);
		LineTo(hDC, 700, 360);
		LineTo(hDC, 900, 360);
		LineTo(hDC, 950, 450);

		EndPaint(hWnd, &ps);
		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		break;
	}
	return DefWindowProc(hWnd, iMsg, wParam, lParam);
}
