DROP TABLE department

CREATE TABLE department (
	dept_name VARCHAR(20),
	building VARCHAR(15),
	budget INT,
	PRIMARY KEY(dept_name)
)

INSERT INTO department
VALUES ('Comp.Sci.', 'Taylor', 100000)

INSERT INTO department
VALUES ('Biology', 'Watson', 90000)

INSERT INTO department
VALUES ('Elec.Eng.', 'Taylor', 85000)

INSERT INTO department
VALUES ('Music', 'Packard', 80000)

INSERT INTO department
VALUES ('Finance', 'Painter', 120000)

INSERT INTO department
VALUES ('History', 'Painter', 50000)

INSERT INTO department
VALUES ('Physics', 'Waston', 70000)

SELECT * FROM department

-----------------------------------------------

CREATE TABLE instructor (
	id VARCHAR(5),
	name VARCHAR(20) NOT NULL,
	dept_name VARCHAR(20),
	salary INT,
	PRIMARY KEY(id)
)

INSERT INTO instructor
VALUES (222222, 'Einstein', 'Physics', 95000)

INSERT INTO instructor
VALUES (12121, 'Wu', 'Finance', 90000)

INSERT INTO instructor
VALUES (32343, 'El Said', 'History', 60000)

INSERT INTO instructor
VALUES (45565, 'Katz', 'Comp.Sci.', 75000)

INSERT INTO instructor
VALUES (98345, 'Kim', 'Elec.Eng.', 80000)

INSERT INTO instructor
VALUES (76766, 'Crick', 'Biology', 72000)

INSERT INTO instructor
VALUES (10101, 'Srinivasan', 'Comp.Sci.', 65000)

INSERT INTO instructor
VALUES (58583, 'Clifieri', 'History', 62000)

INSERT INTO instructor
VALUES (83821, 'Brandt', 'Comp.Sci.', 92000)

INSERT INTO instructor
VALUES (15151, 'Mozart', 'Music', 40000)

INSERT INTO instructor
VALUES (33456, 'Gold', 'Physics', 87000)

INSERT INTO instructor
VALUES (76543, 'Singh', 'Finance', 80000)

SELECT * FROM instructor

-----------------------------------------------

DROP TABLE student

SELECT * FROM student

CREATE TABLE student (
	id VARCHAR(5),
	name VARCHAR(20) NOT NULL,
	dept_name VARCHAR(20),
	tot_cred INT,
	PRIMARY KEY(id)
)

INSERT INTO student
VALUES ('00128', 'Zhang', 'Comp.Sci.', 102)

INSERT INTO student
VALUES ('12345', 'Shankar', 'Comp.Sci.', 32)

INSERT INTO student
VALUES ('19991', 'Brandt', 'History', 80)

INSERT INTO student
VALUES ('23121', 'Chavez', 'Finance', 110)

INSERT INTO student
VALUES ('44553', 'Peltier', 'Physics', 56)

INSERT INTO student
VALUES ('45678', 'Levy', 'Physics', 46)

INSERT INTO student
VALUES ('54321', 'Williams', 'Comp.Sci.', 54)

INSERT INTO student
VALUES ('55739', 'Sanchez', 'Music', 38)

INSERT INTO student
VALUES ('70557', 'Snow', 'Physics', 0)

INSERT INTO student
VALUES ('76543', 'Brown', 'Comp.Sci.', 58)

INSERT INTO student
VALUES ('76653', 'Aoi', 'Elec.Eng.', 60)

INSERT INTO student
VALUES ('98765', 'Bourikas', 'Elec.Eng.', 98)

SELECT * FROM student

-----------------------------------------------

CREATE TABLE course (
	id VARCHAR(7),
	title VARCHAR(100),
	dept_name VARCHAR(20),
	credits INT,
	PRIMARY KEY(id)
)

INSERT INTO course
VALUES ('BIO-101', 'Intro.to Biology', 'Biology', 4)

INSERT INTO course
VALUES ('BIO-301', 'Computational Biology', 'Biology', 4)

INSERT INTO course
VALUES ('BIO-399', 'Genetics', 'Biology', 3)

INSERT INTO course
VALUES ('CS-101', 'Intro.to Computer Science', 'Comp.Sci.', 4)

INSERT INTO course
VALUES ('CS-190', 'Game Design', 'Comp.Sci.', 4)

INSERT INTO course
VALUES ('CS-315', 'Robotics', 'Comp.Sci.', 3)

INSERT INTO course
VALUES ('CS-319', 'Image Processing', 'Comp.Sci.', 3)

INSERT INTO course
VALUES ('CS-347', 'Database System Concepts', 'Comp.Sci.', 3)

INSERT INTO course
VALUES ('EE-181', 'Intro.to Digital System', 'Ekec.Eng.', 3)

INSERT INTO course
VALUES ('FIN-201', 'Investment Banking', 'Finance', 3)

INSERT INTO course
VALUES ('HIS-351', 'World History', 'History', 3)

INSERT INTO course
VALUES ('MU-199', 'Music Video Production', 'Music', 3)

INSERT INTO course
VALUES ('PHY-101', 'Physycal Principles', 'Physics', 4)

SELECT * FROM course

-----------------------------------------------

CREATE TABLE section (
	sec_id VARCHAR(1),
	c_id VARCHAR(7),
	semester VARCHAR(10),
	years VARCHAR(4),
	building VARCHAR(15),
	room_num VARCHAR(5),
	time_slot_id VARCHAR(1)
)

INSERT INTO section
VALUES ('1', 'BIO-101', 'Summer', '2009', 'Painter', '514', 'B')

INSERT INTO section
VALUES ('1', 'BIO-301', 'Summer', '2010', 'Painter', '514', 'A')

INSERT INTO section
VALUES ('1', 'CS-101', 'Fall', '2009', 'Packard', '101', 'H')

INSERT INTO section
VALUES ('1', 'CS-101', 'Spring', '2010', 'Packard', '101', 'F')

INSERT INTO section
VALUES ('1', 'CS-190', 'Spring', '2009', 'Toylor', '3128', 'E')

INSERT INTO section
VALUES ('2', 'CS-190', 'Spring', '2009', 'Toylor', '3128', 'A')

INSERT INTO section
VALUES ('1', 'CS-315', 'Spring', '2010', 'Watson', '120', 'D')

INSERT INTO section
VALUES ('1', 'CS-319', 'Spring', '2010', 'Watson', '100', 'B')

INSERT INTO section
VALUES ('2', 'CS-319', 'Spring', '2010', 'Toylor', '3128', 'C')

INSERT INTO section
VALUES ('1', 'CS-347', 'Fall', '2009', 'Toylor', '3128', 'A')

INSERT INTO section
VALUES ('1', 'EE-181', 'Spring', '2009', 'Toylor', '3128', 'C')

INSERT INTO section
VALUES ('1', 'FIN-201', 'Spring', '2010', 'Packard', '101', 'B')

INSERT INTO section
VALUES ('1', 'HIS-351', 'Spring', '2010', 'Painter', '514', 'C')

INSERT INTO section
VALUES ('1', 'MU-199', 'Spring', '2010', 'Packard', '101', 'D')

INSERT INTO section
VALUES ('1', 'PHY-101', 'Fall', '2009', 'Watson', '100', 'A')

SELECT * FROM section

-----------------------------------------------

CREATE TABLE teaches (
	i_id VARCHAR(5),
	c_id VARCHAR(7),
	sec_id VARCHAR(1),
	semester VARCHAR(10),
	year VARCHAR(4)
)

INSERT INTO teaches
VALUES ('10101', 'CS-101', '1', 'Fall', '2009')

INSERT INTO teaches
VALUES ('10101', 'CS-315', '1', 'Spring', '2010')

INSERT INTO teaches
VALUES ('10101', 'CS-347', '1', 'Fall', '2009')

INSERT INTO teaches
VALUES ('12121', 'FIN-201', '1', 'Spring', '2010')

INSERT INTO teaches
VALUES ('15151', 'MU-199', '1', 'Spring', '2010')

INSERT INTO teaches
VALUES ('22222', 'PHY-101', '1', 'Fall', '2009')

INSERT INTO teaches
VALUES ('32343', 'HIS-351', '1', 'Spring', '2010')

INSERT INTO teaches
VALUES ('45565', 'CS-101', '1', 'Spring', '2010')

INSERT INTO teaches
VALUES ('45565', 'CS-319', '1', 'Spring', '2010')

INSERT INTO teaches
VALUES ('76766', 'BIO-101', '1', 'Summer', '2009')

INSERT INTO teaches
VALUES ('76766', 'BIO-301', '1', 'Summer', '2010')

INSERT INTO teaches
VALUES ('83821', 'CS-190', '1', 'Spring', '2009')

INSERT INTO teaches
VALUES ('83821', 'CS-190', '2', 'Spring', '2009')

INSERT INTO teaches
VALUES ('83821', 'CS-319', '2', 'Spring', '2010')

INSERT INTO teaches
VALUES ('98345', 'EE-181', '1', 'Spring', '2009')

SELECT * FROM teaches

-----------------------------------------------

CREATE TABLE takes (
	s_id VARCHAR(5),
	c_id VARCHAR(7),
	sec_id VARCHAR(1),
	semester VARCHAR(10),
	year VARCHAR(4),
	grade VARCHAR(2)
)

INSERT INTO takes
VALUES ('00128', 'CS-101', '1', 'Fall', '2009', 'A')

INSERT INTO takes
VALUES ('00128', 'CS-347', '1', 'Fall', '2009', 'A-')

INSERT INTO takes
VALUES ('12345', 'CS-101', '1', 'Fall', '2009', 'C')

INSERT INTO takes
VALUES ('12345', 'CS-190', '2', 'Spring', '2009', 'A')

INSERT INTO takes
VALUES ('12345', 'CS-315', '1', 'Spring', '2010', 'A')

INSERT INTO takes
VALUES ('12345', 'CS-347', '1', 'Fall', '2009', 'A')

INSERT INTO takes
VALUES ('19991', 'HIS-351', '1', 'Spring', '2010', 'B')

INSERT INTO takes
VALUES ('23121', 'FIN-201', '1', 'Spring', '2010', 'C+')

INSERT INTO takes
VALUES ('44553', 'PHY-101', '1', 'Fall', '2009', 'B-')

INSERT INTO takes
VALUES ('45678', 'CS-101', '1', 'Fall', '2009', 'F')

INSERT INTO takes
VALUES ('45678', 'CS-101', '1', 'Spring', '2010', 'B+')

INSERT INTO takes
VALUES ('45678', 'CS-319', '1', 'Spring', '2010', 'B')

INSERT INTO takes
VALUES ('54321', 'CS-101', '1', 'Fall', '2009', 'A-')

INSERT INTO takes
VALUES ('54321', 'CS-190', '2', 'Spring', '2009', 'B+')

SELECT * FROM takes

-----------------------------------------------
-----------------------------------------------

SELECT * FROM department
SELECT * FROM instructor
SELECT * FROM student
--SELECT * FROM course
--SELECT * FROM section
--SELECT * FROM teaches
--SELECT * FROM takes

SELECT dept_name FROM department

SELECT * FROM instructor, student

SELECT * FROM student
WHERE tot_cred > 100

SELECT * FROM student
WHERE dept_name = 'Comp.Sci.'

SELECT i.name, s.name
FROM instructor AS i, student AS s
WHERE i.salary < 70000 AND s.tot_cred > 100

SELECT * FROM department
WHERE dept_name LIKE '%i%'

SELECT * FROM student
WHERE name LIKE 'S%'

-- percent ( % ) matches any substring
-- % 는 그쪽 방향에 얼마든 오든 상관없음
-- underscore ( _ ) matches any character
-- _ 는 그쪽 방향에 뭐가 오든 상관없지만 한개만 있어야함
SELECT * FROM student
WHERE name LIKE '_h%'

SELECT * FROM student
ORDER BY tot_cred

SELECT * FROM student
ORDER BY tot_cred DESC

SELECT * FROM instructor
ORDER BY salary DESC

SELECT id, name, dept_name
FROM instructor
UNION
SELECT id, name, dept_name
FROM student

SELECT name
FROM instructor
UNION
SELECT name
FROM student

SELECT name
FROM instructor
UNION ALL
SELECT name
FROM student

SELECT name
FROM instructor
INTERSECT
SELECT name
FROM student

SELECT name
FROM instructor
EXCEPT
SELECT name
FROM student

SELECT * 
FROM student, department

SELECT *
FROM student AS s, department AS d
WHERE s.dept_name = d.dept_name

SELECT *
FROM student AS s INNER JOIN department AS d
ON s.dept_name = d.dept_name

-- LEFT JOIN 은 왼쪽 테이블의 이름은 전부 나옴
-- 오른쪽 테이블의 경우 NULL 값이 나올 수 있음
SELECT i.name AS 교수, s.name AS 학생
FROM instructor AS i LEFT JOIN student AS s
ON i.dept_name = s.dept_name

SELECT i.name AS 교수, s.name AS 학생
FROM instructor AS i RIGHT JOIN student AS s
ON i.dept_name = s.dept_name

SELECT AVG(salary) FROM instructor
WHERE salary > 50000

SELECT MIN(salary) FROM instructor
WHERE salary > 50000

SELECT MAX(salary) FROM instructor
WHERE salary < 80000

SELECT SUM(salary) fROM instructor
WHERE salary < 80000

SELECT COUNT(salary) FROM instructor
WHERE salary > 70000

-- 중복 제거 방법 GROUP BY, DISTINCT
-- 1 그룹으로 묶어서 자동으로 제거
SELECT dept_name FROM instructor
GROUP BY dept_name

-- 2 직접 제거한 값만 뽑음
SELECT DISTINCT dept_name 
FROM instructor

SELECT dept_name, AVG(tot_cred) FROM student
GROUP BY dept_name

SELECT dept_name FROM instructor
GROUP BY dept_name
HAVING dept_name LIKE '_i%'

SELECT DISTINCT dept_name FROM instructor
WHERE dept_name LIKE '_i%'

SELECT dept_name, salary FROM instructor

SELECT dept_name, AVG(salary) FROM instructor
GROUP BY dept_name
HAVING dept_name LIKE '_i%'

SELECT dept_name, name, salary
FROM instructor
WHERE dept_name NOT IN (
	SELECT dept_name
	FROM student
	WHERE dept_name LIKE '_i%'
)

SELECT dept_name, name, salary
FROM instructor
WHERE dept_name NOT IN (
	SELECT dept_name
	FROM instructor
	WHERE dept_name LIKE '_i%'
)

SELECT name, salary
FROM instructor
WHERE salary < SOME (
	SELECT salary
	FROM instructor
	WHERE name LIKE '%i%'
)

SELECT name, salary
FROM instructor
WHERE salary < ALL (
	SELECT salary
	FROM instructor
	WHERE name LIKE '%i%'
)

SELECT *
FROM instructor
WHERE EXISTS (
	SELECT dept_name
	FROM student
	WHERE tot_cred > 20
)

SELECT *
FROM (
	SELECT DISTINCT dept_name
	FROM student
) AS tmp
WHERE tmp.dept_name LIKE '_i%'