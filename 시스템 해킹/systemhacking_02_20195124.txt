#include <stdio.h>

int addval(int a, int b) {
	/*
Dump of assembler code for function addVal:
   0x0804841d <+0>:	push   ebp
   0x0804841e <+1>:	mov    ebp,esp
   0x08048420 <+3>:	mov    eax,DWORD PTR [ebp+0xc] //eax = 20
   0x08048423 <+6>:	mov    edx,DWORD PTR [ebp+0x8] //edx = 10
   0x08048426 <+9>:	add    eax,edx //a + b
   0x08048428 <+11>:pop    ebp 
   0x08048429 <+12>:ret //return a + b
End of assembler dump.
	*/
	return a + b;
}

void ex_01() {
	/*
Dump of assembler code for function main:
   0x0804842a <+0>:	push   ebp
   0x0804842b <+1>:	mov    ebp,esp
   0x0804842d <+3>:	and    esp,0xfffffff0
   0x08048430 <+6>:	sub    esp,0x20
   0x08048433 <+9>:	mov    DWORD PTR [esp+0x18],0xa
   0x0804843b <+17>:mov    DWORD PTR [esp+0x1c],0x14
   0x08048443 <+25>:mov    eax,DWORD PTR [esp+0x1c] //eax = 20
   0x08048447 <+29>:mov    DWORD PTR [esp+0x4],eax 
   0x0804844b <+33>:mov    eax,DWORD PTR [esp+0x18]
   0x0804844f <+37>:mov    DWORD PTR [esp],eax
   0x08048452 <+40>:call   0x804841d <addVal>
   0x08048457 <+45>:mov    DWORD PTR [esp+0x4],eax
   0x0804845b <+49>:mov    DWORD PTR [esp],0x8048500
   0x08048462 <+56>:call   0x80482f0 <printf@plt>
   0x08048467 <+61>:mov    eax,0x0
   0x0804846c <+66>:leave
   0x0804846d <+67>:ret
End of assembler dump.
    */
	int a = 20, b = 10;
	
	printf("%d", addval(a, b));
}

void main(void) {
	ex_01();
	getchar();
}